[tool.poetry]
name = "seshat"
version = "0.1.0"
description = ""
authors = ["Yale Huang <calvino.huang@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
confz = "2.0.1"
gradio = "4.26.0"
ipython = "8.12.3"
langchain = "0.1.14"
openai = "1.16.2"
pydantic = "2.6.4"
scikit-learn = "1.4.1.post1"
openpyxl = "^3.1.2"
langchain-openai = "^0.1.3"
pinecone-client = "^3.2.2"
pymilvus = "^2.4.0"
langchain-community = "^0.0.33"
chardet = "^5.2.0"
langserve = "^0.1.0"
bson = "^0.5.10"
gunicorn = "^22.0.0"
huggingface-hub = "^0.23.0"
langchain-chroma = "^0.1.0"
protobuf = "3.20.*"
faiss-cpu = "^1.8.0"
Faker = "^25.2.0"
pydantic-yaml = "^1.3.0"
jieba = "^0.42.1"

[tool.poetry.dev-dependencies]
ipykernel = "^6.29.4"
coverage = "^7.4.0"
pytest = "^8.1.0"
pytest-cov = "^4.0.0"

[tool.poetry.group.dev.dependencies]
coverage = "^7.9.1"
pytest = "^8.4.1"
pytest-cov = "^6.2.1"

[tool.coverage.run]
source = [".", "components", "tools", "ui", "db"]
omit = [
    "*/test/*",
    "*/tests/*", 
    "*/venv/*",
    "*/.venv/*",
    "*/env/*",
    "*/site-packages/*",
    "*/scripts/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
show_missing = true
precision = 2
fail_under = 80

[tool.coverage.html]
directory = "htmlcov"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
